{"version":3,"sources":["components/Tick.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Tick","state","setState","useEffect","idInterval","setInterval","clearInterval","get2digitsSring","hours","minutes","seconds","App","useState","startOrStop","setStartOrStop","wait","setWait","style","Button","variant","color","onClick","e","setTimeout","detail","Paper","prevState","num","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAgCeA,MAlBf,YAA8C,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAWtB,OATGC,qBAAU,WACT,IAAMC,EAAaC,aAAY,WACjCH,MACK,KAEH,OAAO,kBAAMI,cAAcF,MACzB,CAACF,IAIH,gCACDK,EAAgBN,EAAMO,OADrB,IAC8BD,EAAgBN,EAAMQ,SADpD,IAC+DF,EAAgBN,EAAMS,a,gBCmD3EC,MAjEf,WAAgB,IAAD,EAEaC,mBAAuB,CAACJ,MAAO,EAAGC,QAAS,EAAGC,QAAS,IAFpE,mBAENT,EAFM,KAECC,EAFD,OAGyBU,oBAAkB,GAH3C,mBAGNC,EAHM,KAGOC,EAHP,OAIWF,oBAAkB,GAJ7B,mBAING,EAJM,KAIAC,EAJA,KA+Cb,OACE,sBAAKC,MAAO,CAAC,UAAa,SAAU,OAAU,QAA9C,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,WA5BpDN,GACDD,GAAgBD,GAChBG,GAAQ,IACAH,GACRC,GAAgBD,GAChBX,EAAS,CAACM,MAAO,EAAGC,QAAS,EAAGC,QAAS,MAEzCR,EAAS,CAACM,MAAO,EAAGC,QAAS,EAAGC,QAAS,IACzCI,GAAgBD,KAoBqEI,MAAO,CAAC,OAAU,QAAvG,SACGJ,EAAc,OAAS,UAE1B,cAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAdtB,SAACC,GACzBC,YAAW,WACO,IAAbD,EAAEE,SACHR,GAAQ,GACRF,GAAe,MAEhB,MAQuEG,MAAO,CAAC,OAAU,QAA1F,kBAGA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAAS,kBArBvDnB,EAAS,CAACM,MAAO,EAAGC,QAAS,EAAGC,QAAS,SACzCI,GAAe,IAoBkEG,MAAO,CAAC,OAAU,QAAjG,mBAGA,cAACQ,EAAA,EAAD,CAAOR,MAAO,CAAC,SAAY,MAAO,SAAY,QAAS,OAAU,aAAjE,SACGJ,EAAc,cAAC,EAAD,CAAMZ,MAAOA,EAAOC,SAnDpB,WACnBA,GAAS,SAAAwB,GACP,OAAyB,IAAtBA,EAAUjB,SAAuC,IAAtBiB,EAAUhB,QAC/B,2BAAIgB,GAAX,IAAsBlB,MAAOkB,EAAUlB,MAAO,EAAGC,QAAS,EAAGC,QAAS,IAE/C,IAAtBgB,EAAUhB,QACJ,2BAAIgB,GAAX,IAAsBjB,QAASiB,EAAUjB,QAAQ,EAAGC,QAAS,IAExD,2BAAIgB,GAAX,IAAsBhB,QAASgB,EAAUhB,QAAQ,UA2CnC,UAAsDH,EAAgBN,EAAMO,OAA5E,YAAsFD,EAAgBN,EAAMQ,SAA5G,YAAwHF,EAAgBN,EAAMS,gBASrJH,EAAkB,SAACoB,GAAD,OAAiBA,EAAM,GAAK,IAAMA,EAAMA,GCnExDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.865b249d.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { get2digitsSring } from '../App';\r\n\r\ntype TickStateType = {\r\n\thours: number\r\n\tminutes: number\r\n\tseconds: number\r\n}\r\n\r\ntype TickType = {\r\n\tstate: TickStateType\r\n\tsetState: () => void\r\n}\r\n\r\nfunction Tick( {state, setState} : TickType) {\r\n\r\n    useEffect(() => {\r\n    \tconst idInterval = setInterval(()=>{\r\n\t\t\tsetState()\r\n    \t}, 500)\r\n\r\n    \treturn () => clearInterval(idInterval)\r\n    }, [setState]\r\n\t)\r\n\r\n\treturn (\r\n    \t<div >\r\n\t\t\t{get2digitsSring(state.hours)}:{get2digitsSring(state.minutes)}:{get2digitsSring(state.seconds)}\r\n    \t</div>\r\n\t);\r\n}\r\n\r\nexport default Tick;\r\n\r\n\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Tick from './components/Tick';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\n\n\ntype UseStateType = {\n  hours: number\n  minutes: number\n  seconds: number\n}\n\nfunction App() {\n  \n  const [state, setState] = useState<UseStateType>({hours: 0, minutes: 0, seconds: 0})  \n  const [startOrStop, setStartOrStop] = useState<boolean>(false)\n  const [wait, setWait] = useState<boolean>(false)\n\n\n\n  const onChangeTick = () => {\n    setState(prevState => {\n      if(prevState.minutes === 4 && prevState.seconds === 4){\n        return {...prevState, hours: prevState.hours +1, minutes: 0, seconds: 0}\n      }\n      if(prevState.seconds === 4){\n        return {...prevState, minutes: prevState.minutes+1, seconds: 0}\n      } \n      return {...prevState, seconds: prevState.seconds+1}\n    })\n  }\n\n  const onClickStartOrStopButton = () => {\n    if(wait){\n      setStartOrStop(!startOrStop)\n      setWait(false)\n    } else if(startOrStop){\n      setStartOrStop(!startOrStop)\n      setState({hours: 0, minutes: 0, seconds: 0})\n    } else {\n      setState({hours: 0, minutes: 0, seconds: 0})\n      setStartOrStop(!startOrStop)\n    }\n  }\n\n  const onClickResetButton = () => {\n    setState({hours: 0, minutes: 0, seconds: 0})\n    setStartOrStop(true)\n  }\n\n  const onClickWaitButton = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    setTimeout(()=>{\n      if(e.detail === 2){\n        setWait(true)\n        setStartOrStop(false)  \n      }\n    }, 300)\n  }\n\n  return (\n    <div style={{'textAlign': 'center', 'margin': '20px'}}>\n      <Button variant=\"contained\" color=\"primary\" onClick={()=>onClickStartOrStopButton()} style={{'margin': \"10px\"}}>\n        {startOrStop ? 'Stop' : 'Start'}\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" onClick={onClickWaitButton} style={{'margin': \"10px\"}}> \n        Wait\n      </Button>\n      <Button variant=\"contained\" color=\"primary\" onClick={()=>onClickResetButton()} style={{'margin': \"10px\"}}>\n        Reset\n      </Button>\n      <Paper style={{'maxWidth': '10%', 'minWidth': '100px', 'margin': '10px auto'}}>\n        {startOrStop ? <Tick state={state} setState={onChangeTick}/> : `${get2digitsSring(state.hours)}:${get2digitsSring(state.minutes)}:${get2digitsSring(state.seconds)}`}\n      </Paper>\n    </div>\n  );\n}\n\nexport default App;\n\n\nexport const get2digitsSring = (num: number) => num < 10 ? '0' + num : num;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}